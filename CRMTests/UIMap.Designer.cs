// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CRMTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// EnterToSystemAsBoss - Use 'EnterToSystemAsBossParams' to pass parameters into this method.
        /// </summary>
        public void EnterToSystemAsBoss()
        {
            #region Variable Declarations
            WpfEdit uITbUserNameEdit = this.UICRMsystemWindow.UITbUserNameEdit;
            WpfEdit uIPbPswEdit = this.UICRMsystemWindow.UIPbPswEdit;
            WpfButton uIALLTASKButton = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage.UIALLTASKButton;
            WinButton uICloseButton = this.UINewEmployeeWindow.UICloseButton;
            WinButton uICloseButton1 = this.UICRMSystemWindow1.UICloseButton;
            WpfText uIContactsText = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage1.UIItemText.UIContactsText;
            WpfButton uIALLCONTACTSButton = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage1.UIALLCONTACTSButton;
            WpfText uIClientsText = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage2.UIItemText.UIClientsText;
            WpfButton uIDELETEButton = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage2.UIDELETEButton;
            WinButton uIYesButton = this.UIDeletionWindow.UIYesWindow.UIYesButton;
            WinButton uIOKButton = this.UIDeletionWindow.UIOKWindow.UIOKButton;
            WpfText uIEmployeesText = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage3.UIItemText.UIEmployeesText;
            WpfEdit uITbEmployeeFirstNameEdit = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage3.UITbEmployeeFirstNameEdit;
            WpfEdit uITbEmployeeLastNameEdit = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage3.UITbEmployeeLastNameEdit;
            WpfButton uIUPDATEButton = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage3.UIUPDATEButton;
            WinControl uIUpdatingDialog = this.UIUpdatingWindow.UIUpdatingDialog;
            WinButton uIYesButton1 = this.UIUpdatingWindow.UIYesWindow.UIYesButton;
            WinButton uIOKButton1 = this.UIUpdatingWindow.UIOKWindow.UIOKButton;
            #endregion

            // Type 'pupkin' in 'tbUserName' text box
            uITbUserNameEdit.Text = this.EnterToSystemAsBossParams.UITbUserNameEditText;

            // Type '{Tab}' in 'tbUserName' text box
            Keyboard.SendKeys(uITbUserNameEdit, this.EnterToSystemAsBossParams.UITbUserNameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'pbPsw' text box
            Keyboard.SendKeys(uIPbPswEdit, this.EnterToSystemAsBossParams.UIPbPswEditSendKeys, true);

            // Click 'ALL TASK' button
            Mouse.Click(uIALLTASKButton, new Point(50, 18));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Element not available

            // Element not available

            // Element not available

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(15, 17));

            // Click 'Close' button
            Mouse.Click(uICloseButton1, new Point(15, 10));

            // Click 'Contacts' label
            Mouse.Click(uIContactsText, new Point(18, 9));

            // Click 'ALL CONTACTS' button
            Mouse.Click(uIALLCONTACTSButton, new Point(98, 21));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Click 'Clients' label
            Mouse.Click(uIClientsText, new Point(1, 7));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Click 'DELETE' button
            Mouse.Click(uIDELETEButton, new Point(100, 13));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(17, 10));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(16, 5));

            // Click 'Employees' label
            Mouse.Click(uIEmployeesText, new Point(32, 6));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Type 'John' in 'tbEmployeeFirstName' text box
            uITbEmployeeFirstNameEdit.Text = this.EnterToSystemAsBossParams.UITbEmployeeFirstNameEditText;

            // Type 'Red' in 'tbEmployeeLastName' text box
            uITbEmployeeLastNameEdit.Text = this.EnterToSystemAsBossParams.UITbEmployeeLastNameEditText;

            // Click 'UPDATE' button
            Mouse.Click(uIUPDATEButton, new Point(134, 14));

            // Click 'Updating' Dialog
            Mouse.Click(uIUpdatingDialog, new Point(243, 94));

            // Click '&Yes' button
            Mouse.Click(uIYesButton1, new Point(37, 5));

            // Click 'OK' button
            Mouse.Click(uIOKButton1, new Point(13, 9));

            // Last action on Row was not recorded because the control does not have any good identification property.
        }
        
        /// <summary>
        /// AdditionNewContact - Use 'AdditionNewContactParams' to pass parameters into this method.
        /// </summary>
        public void AdditionNewContact()
        {
            #region Variable Declarations
            WpfEdit uITbUserNameEdit = this.UICRMsystemWindow.UITbUserNameEdit;
            WpfEdit uIPbPswEdit = this.UICRMsystemWindow.UIPbPswEdit;
            WpfButton uIALLTASKButton = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage.UIALLTASKButton;
            WinButton uICloseButton = this.UINewEmployeeWindow.UICloseButton;
            WinButton uICloseButton1 = this.UICRMSystemWindow1.UICloseButton;
            WpfText uIContactsText = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage1.UIItemText.UIContactsText;
            WpfButton uIALLCONTACTSButton = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage1.UIALLCONTACTSButton;
            WpfText uIClientsText = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage2.UIItemText.UIClientsText;
            WpfButton uIDELETEButton = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage2.UIDELETEButton;
            WinButton uIYesButton = this.UIDeletionWindow.UIYesWindow.UIYesButton;
            WinButton uIOKButton = this.UIDeletionWindow.UIOKWindow.UIOKButton;
            WpfText uIEmployeesText = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage3.UIItemText.UIEmployeesText;
            WpfEdit uITbEmployeeFirstNameEdit = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage3.UITbEmployeeFirstNameEdit;
            WpfEdit uITbEmployeeLastNameEdit = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage3.UITbEmployeeLastNameEdit;
            WpfButton uIUPDATEButton = this.UICRMSystemUserIvanPupWindow.UITabControl1TabList.UIItemTabPage3.UIUPDATEButton;
            WinControl uIUpdatingDialog = this.UIUpdatingWindow.UIUpdatingDialog;
            WinButton uIYesButton1 = this.UIUpdatingWindow.UIYesWindow.UIYesButton;
            WinButton uIOKButton1 = this.UIUpdatingWindow.UIOKWindow.UIOKButton;
            WpfButton uIBtNewTasksButton = this.UICRMSystemUserIvanPupWindow.UIItemToolBar.UIBtNewTasksButton;
            WinButton uICloseButton2 = this.UINewTaskWindow.UICloseButton;
            WpfButton uIBtNewContactButton = this.UICRMSystemUserIvanPupWindow.UIItemToolBar.UIBtNewContactButton;
            WpfComboBox uICbClientContactNameComboBox = this.UINewContactWindow.UICbClientContactNameComboBox;
            WpfComboBox uICbEmployeeContactNamComboBox = this.UINewContactWindow.UICbEmployeeContactNamComboBox;
            WpfComboBox uICbContactTypeComboBox = this.UINewContactWindow.UICbContactTypeComboBox;
            WpfDatePicker uIDpContactDateDatePicker = this.UINewContactWindow.UIDpContactDateDatePicker;
            WpfEdit uITbContactSubjectEdit = this.UINewContactWindow.UITbContactSubjectEdit;
            WpfEdit uITbContactOutcomeEdit = this.UINewContactWindow.UITbContactOutcomeEdit;
            WpfEdit uITbContactActionsToDoEdit = this.UINewContactWindow.UITbContactActionsToDoEdit;
            WpfButton uIADDButton = this.UINewContactWindow.UIADDButton;
            WinControl uIAdditionDialog = this.UIAdditionWindow.UIAdditionDialog;
            WinButton uIYesButton2 = this.UIAdditionWindow.UIYesWindow.UIYesButton;
            WpfButton uICLOSEButton3 = this.UINewContactWindow.UICLOSEButton;
            #endregion

            // Type 'pupkin' in 'tbUserName' text box
            uITbUserNameEdit.Text = this.AdditionNewContactParams.UITbUserNameEditText;

            // Type '{Tab}' in 'tbUserName' text box
            Keyboard.SendKeys(uITbUserNameEdit, this.AdditionNewContactParams.UITbUserNameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'pbPsw' text box
            Keyboard.SendKeys(uIPbPswEdit, this.AdditionNewContactParams.UIPbPswEditSendKeys, true);

            // Click 'ALL TASK' button
            Mouse.Click(uIALLTASKButton, new Point(50, 18));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Element not available

            // Element not available

            // Element not available

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(15, 17));

            // Click 'Close' button
            Mouse.Click(uICloseButton1, new Point(15, 10));

            // Click 'Contacts' label
            Mouse.Click(uIContactsText, new Point(18, 9));

            // Click 'ALL CONTACTS' button
            Mouse.Click(uIALLCONTACTSButton, new Point(98, 21));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Click 'Clients' label
            Mouse.Click(uIClientsText, new Point(1, 7));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Click 'DELETE' button
            Mouse.Click(uIDELETEButton, new Point(100, 13));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(17, 10));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(16, 5));

            // Click 'Employees' label
            Mouse.Click(uIEmployeesText, new Point(32, 6));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Type 'John' in 'tbEmployeeFirstName' text box
            uITbEmployeeFirstNameEdit.Text = this.AdditionNewContactParams.UITbEmployeeFirstNameEditText;

            // Type 'Red' in 'tbEmployeeLastName' text box
            uITbEmployeeLastNameEdit.Text = this.AdditionNewContactParams.UITbEmployeeLastNameEditText;

            // Click 'UPDATE' button
            Mouse.Click(uIUPDATEButton, new Point(134, 14));

            // Click 'Updating' Dialog
            Mouse.Click(uIUpdatingDialog, new Point(243, 94));

            // Click '&Yes' button
            Mouse.Click(uIYesButton1, new Point(37, 5));

            // Click 'OK' button
            Mouse.Click(uIOKButton1, new Point(13, 9));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Click 'btNewTasks' button
            Mouse.Click(uIBtNewTasksButton, new Point(24, 18));

            // Click 'Close' button
            Mouse.Click(uICloseButton2, new Point(19, 8));

            // Click 'btNewContact' button
            Mouse.Click(uIBtNewContactButton, new Point(17, 29));

            // Select 'Concordia University' in 'cbClientContactName' combo box
            uICbClientContactNameComboBox.SelectedItem = this.AdditionNewContactParams.UICbClientContactNameComboBoxSelectedItem;

            // Select 'Pedro Gonzales' in 'cbEmployeeContactName' combo box
            uICbEmployeeContactNamComboBox.SelectedItem = this.AdditionNewContactParams.UICbEmployeeContactNamComboBoxSelectedItem;

            // Select 'meeting' in 'cbContactType' combo box
            uICbContactTypeComboBox.SelectedItem = this.AdditionNewContactParams.UICbContactTypeComboBoxSelectedItem;

            // Select '15-Sep-2016' in 'dpContactDate' date picker
            uIDpContactDateDatePicker.DateAsString = this.AdditionNewContactParams.UIDpContactDateDatePickerDateAsString;

            // Type 'sailing' in 'tbContactSubject' text box
            uITbContactSubjectEdit.Text = this.AdditionNewContactParams.UITbContactSubjectEditText;

            // Type 'contract' in 'tbContactOutcome' text box
            uITbContactOutcomeEdit.Text = this.AdditionNewContactParams.UITbContactOutcomeEditText;

            // Type 'speak' in 'tbContactActionsToDo' text box
            uITbContactActionsToDoEdit.Text = this.AdditionNewContactParams.UITbContactActionsToDoEditText;

            // Click 'ADD' button
            Mouse.Click(uIADDButton, new Point(66, 19));

            // Click 'Addition' Dialog
            Mouse.Click(uIAdditionDialog, new Point(209, 95));

            // Click '&Yes' button
            Mouse.Click(uIYesButton2, new Point(58, 6));

            // Click 'CLOSE' button
            Mouse.Click(uICLOSEButton3, new Point(46, 26));
        }
        
        #region Properties
        public virtual EnterToSystemAsBossParams EnterToSystemAsBossParams
        {
            get
            {
                if ((this.mEnterToSystemAsBossParams == null))
                {
                    this.mEnterToSystemAsBossParams = new EnterToSystemAsBossParams();
                }
                return this.mEnterToSystemAsBossParams;
            }
        }
        
        public virtual AdditionNewContactParams AdditionNewContactParams
        {
            get
            {
                if ((this.mAdditionNewContactParams == null))
                {
                    this.mAdditionNewContactParams = new AdditionNewContactParams();
                }
                return this.mAdditionNewContactParams;
            }
        }
        
        public UICRMsystemWindow UICRMsystemWindow
        {
            get
            {
                if ((this.mUICRMsystemWindow == null))
                {
                    this.mUICRMsystemWindow = new UICRMsystemWindow();
                }
                return this.mUICRMsystemWindow;
            }
        }
        
        public UICRMSystemUserIvanPupWindow UICRMSystemUserIvanPupWindow
        {
            get
            {
                if ((this.mUICRMSystemUserIvanPupWindow == null))
                {
                    this.mUICRMSystemUserIvanPupWindow = new UICRMSystemUserIvanPupWindow();
                }
                return this.mUICRMSystemUserIvanPupWindow;
            }
        }
        
        public UINewEmployeeWindow UINewEmployeeWindow
        {
            get
            {
                if ((this.mUINewEmployeeWindow == null))
                {
                    this.mUINewEmployeeWindow = new UINewEmployeeWindow();
                }
                return this.mUINewEmployeeWindow;
            }
        }
        
        public UICRMSystemWindow1 UICRMSystemWindow1
        {
            get
            {
                if ((this.mUICRMSystemWindow1 == null))
                {
                    this.mUICRMSystemWindow1 = new UICRMSystemWindow1();
                }
                return this.mUICRMSystemWindow1;
            }
        }
        
        public UIDeletionWindow UIDeletionWindow
        {
            get
            {
                if ((this.mUIDeletionWindow == null))
                {
                    this.mUIDeletionWindow = new UIDeletionWindow();
                }
                return this.mUIDeletionWindow;
            }
        }
        
        public UIUpdatingWindow UIUpdatingWindow
        {
            get
            {
                if ((this.mUIUpdatingWindow == null))
                {
                    this.mUIUpdatingWindow = new UIUpdatingWindow();
                }
                return this.mUIUpdatingWindow;
            }
        }
        
        public UINewTaskWindow UINewTaskWindow
        {
            get
            {
                if ((this.mUINewTaskWindow == null))
                {
                    this.mUINewTaskWindow = new UINewTaskWindow();
                }
                return this.mUINewTaskWindow;
            }
        }
        
        public UINewContactWindow UINewContactWindow
        {
            get
            {
                if ((this.mUINewContactWindow == null))
                {
                    this.mUINewContactWindow = new UINewContactWindow();
                }
                return this.mUINewContactWindow;
            }
        }
        
        public UIAdditionWindow UIAdditionWindow
        {
            get
            {
                if ((this.mUIAdditionWindow == null))
                {
                    this.mUIAdditionWindow = new UIAdditionWindow();
                }
                return this.mUIAdditionWindow;
            }
        }
        #endregion
        
        #region Fields
        private EnterToSystemAsBossParams mEnterToSystemAsBossParams;
        
        private AdditionNewContactParams mAdditionNewContactParams;
        
        private UICRMsystemWindow mUICRMsystemWindow;
        
        private UICRMSystemUserIvanPupWindow mUICRMSystemUserIvanPupWindow;
        
        private UINewEmployeeWindow mUINewEmployeeWindow;
        
        private UICRMSystemWindow1 mUICRMSystemWindow1;
        
        private UIDeletionWindow mUIDeletionWindow;
        
        private UIUpdatingWindow mUIUpdatingWindow;
        
        private UINewTaskWindow mUINewTaskWindow;
        
        private UINewContactWindow mUINewContactWindow;
        
        private UIAdditionWindow mUIAdditionWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterToSystemAsBoss'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EnterToSystemAsBossParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'pupkin' in 'tbUserName' text box
        /// </summary>
        public string UITbUserNameEditText = "pupkin";
        
        /// <summary>
        /// Type '{Tab}' in 'tbUserName' text box
        /// </summary>
        public string UITbUserNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'pbPsw' text box
        /// </summary>
        public string UIPbPswEditSendKeys = "x0qAXCJkAksV/5Z4rEZzrtBropebptsN";
        
        /// <summary>
        /// Type 'John' in 'tbEmployeeFirstName' text box
        /// </summary>
        public string UITbEmployeeFirstNameEditText = "John";
        
        /// <summary>
        /// Type 'Red' in 'tbEmployeeLastName' text box
        /// </summary>
        public string UITbEmployeeLastNameEditText = "Red";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AdditionNewContact'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AdditionNewContactParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'pupkin' in 'tbUserName' text box
        /// </summary>
        public string UITbUserNameEditText = "pupkin";
        
        /// <summary>
        /// Type '{Tab}' in 'tbUserName' text box
        /// </summary>
        public string UITbUserNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'pbPsw' text box
        /// </summary>
        public string UIPbPswEditSendKeys = "x0qAXCJkAksV/5Z4rEZzrtBropebptsN";
        
        /// <summary>
        /// Type 'John' in 'tbEmployeeFirstName' text box
        /// </summary>
        public string UITbEmployeeFirstNameEditText = "John";
        
        /// <summary>
        /// Type 'Red' in 'tbEmployeeLastName' text box
        /// </summary>
        public string UITbEmployeeLastNameEditText = "Red";
        
        /// <summary>
        /// Select 'Concordia University' in 'cbClientContactName' combo box
        /// </summary>
        public string UICbClientContactNameComboBoxSelectedItem = "Concordia University";
        
        /// <summary>
        /// Select 'Pedro Gonzales' in 'cbEmployeeContactName' combo box
        /// </summary>
        public string UICbEmployeeContactNamComboBoxSelectedItem = "Pedro Gonzales";
        
        /// <summary>
        /// Select 'meeting' in 'cbContactType' combo box
        /// </summary>
        public string UICbContactTypeComboBoxSelectedItem = "meeting";
        
        /// <summary>
        /// Select '15-Sep-2016' in 'dpContactDate' date picker
        /// </summary>
        public string UIDpContactDateDatePickerDateAsString = "15-Sep-2016";
        
        /// <summary>
        /// Type 'sailing' in 'tbContactSubject' text box
        /// </summary>
        public string UITbContactSubjectEditText = "sailing";
        
        /// <summary>
        /// Type 'contract' in 'tbContactOutcome' text box
        /// </summary>
        public string UITbContactOutcomeEditText = "contract";
        
        /// <summary>
        /// Type 'speak' in 'tbContactActionsToDo' text box
        /// </summary>
        public string UITbContactActionsToDoEditText = "speak";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICRMsystemWindow : WpfWindow
    {
        
        public UICRMsystemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "CRM system";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("CRM system");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITbUserNameEdit
        {
            get
            {
                if ((this.mUITbUserNameEdit == null))
                {
                    this.mUITbUserNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbUserNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbUserName";
                    this.mUITbUserNameEdit.WindowTitles.Add("CRM system");
                    #endregion
                }
                return this.mUITbUserNameEdit;
            }
        }
        
        public WpfEdit UIPbPswEdit
        {
            get
            {
                if ((this.mUIPbPswEdit == null))
                {
                    this.mUIPbPswEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPbPswEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "pbPsw";
                    this.mUIPbPswEdit.WindowTitles.Add("CRM system");
                    #endregion
                }
                return this.mUIPbPswEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITbUserNameEdit;
        
        private WpfEdit mUIPbPswEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICRMSystemUserIvanPupWindow : WpfWindow
    {
        
        public UICRMSystemUserIvanPupWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = " CRM System User: Ivan   Pupkin";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
            #endregion
        }
        
        #region Properties
        public UITabControl1TabList UITabControl1TabList
        {
            get
            {
                if ((this.mUITabControl1TabList == null))
                {
                    this.mUITabControl1TabList = new UITabControl1TabList(this);
                }
                return this.mUITabControl1TabList;
            }
        }
        
        public UIItemToolBar UIItemToolBar
        {
            get
            {
                if ((this.mUIItemToolBar == null))
                {
                    this.mUIItemToolBar = new UIItemToolBar(this);
                }
                return this.mUIItemToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UITabControl1TabList mUITabControl1TabList;
        
        private UIItemToolBar mUIItemToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITabControl1TabList : WpfTabList
    {
        
        public UITabControl1TabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "tabControl1";
            this.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
            #endregion
        }
        
        #region Properties
        public UIItemTabPage UIItemTabPage
        {
            get
            {
                if ((this.mUIItemTabPage == null))
                {
                    this.mUIItemTabPage = new UIItemTabPage(this);
                }
                return this.mUIItemTabPage;
            }
        }
        
        public UIItemTabPage1 UIItemTabPage1
        {
            get
            {
                if ((this.mUIItemTabPage1 == null))
                {
                    this.mUIItemTabPage1 = new UIItemTabPage1(this);
                }
                return this.mUIItemTabPage1;
            }
        }
        
        public UIItemTabPage2 UIItemTabPage2
        {
            get
            {
                if ((this.mUIItemTabPage2 == null))
                {
                    this.mUIItemTabPage2 = new UIItemTabPage2(this);
                }
                return this.mUIItemTabPage2;
            }
        }
        
        public UIItemTabPage3 UIItemTabPage3
        {
            get
            {
                if ((this.mUIItemTabPage3 == null))
                {
                    this.mUIItemTabPage3 = new UIItemTabPage3(this);
                }
                return this.mUIItemTabPage3;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTabPage mUIItemTabPage;
        
        private UIItemTabPage1 mUIItemTabPage1;
        
        private UIItemTabPage2 mUIItemTabPage2;
        
        private UIItemTabPage3 mUIItemTabPage3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTabPage : WpfTabPage
    {
        
        public UIItemTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "tabItem1";
            this.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
            #endregion
        }
        
        #region Properties
        public WpfButton UIALLTASKButton
        {
            get
            {
                if ((this.mUIALLTASKButton == null))
                {
                    this.mUIALLTASKButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIALLTASKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btAllTask";
                    this.mUIALLTASKButton.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUIALLTASKButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIALLTASKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTabPage1 : WpfTabPage
    {
        
        public UIItemTabPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "tabItem2";
            this.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
            #endregion
        }
        
        #region Properties
        public UIItemText UIItemText
        {
            get
            {
                if ((this.mUIItemText == null))
                {
                    this.mUIItemText = new UIItemText(this);
                }
                return this.mUIItemText;
            }
        }
        
        public WpfButton UIALLCONTACTSButton
        {
            get
            {
                if ((this.mUIALLCONTACTSButton == null))
                {
                    this.mUIALLCONTACTSButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIALLCONTACTSButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btAllContacts";
                    this.mUIALLCONTACTSButton.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUIALLCONTACTSButton;
            }
        }
        #endregion
        
        #region Fields
        private UIItemText mUIItemText;
        
        private WpfButton mUIALLCONTACTSButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemText : WpfText
    {
        
        public UIItemText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = " ";
            this.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
            #endregion
        }
        
        #region Properties
        public WpfText UIContactsText
        {
            get
            {
                if ((this.mUIContactsText == null))
                {
                    this.mUIContactsText = new WpfText(this);
                    #region Search Criteria
                    this.mUIContactsText.SearchProperties[WpfText.PropertyNames.Name] = "Contacts";
                    this.mUIContactsText.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUIContactsText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIContactsText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTabPage2 : WpfTabPage
    {
        
        public UIItemTabPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "tabItem3";
            this.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
            #endregion
        }
        
        #region Properties
        public UIItemText1 UIItemText
        {
            get
            {
                if ((this.mUIItemText == null))
                {
                    this.mUIItemText = new UIItemText1(this);
                }
                return this.mUIItemText;
            }
        }
        
        public WpfButton UIDELETEButton
        {
            get
            {
                if ((this.mUIDELETEButton == null))
                {
                    this.mUIDELETEButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIDELETEButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btClientDelete";
                    this.mUIDELETEButton.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUIDELETEButton;
            }
        }
        #endregion
        
        #region Fields
        private UIItemText1 mUIItemText;
        
        private WpfButton mUIDELETEButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemText1 : WpfText
    {
        
        public UIItemText1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = " ";
            this.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
            #endregion
        }
        
        #region Properties
        public WpfText UIClientsText
        {
            get
            {
                if ((this.mUIClientsText == null))
                {
                    this.mUIClientsText = new WpfText(this);
                    #region Search Criteria
                    this.mUIClientsText.SearchProperties[WpfText.PropertyNames.Name] = "Clients";
                    this.mUIClientsText.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUIClientsText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIClientsText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTabPage3 : WpfTabPage
    {
        
        public UIItemTabPage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "tabItem4";
            this.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
            #endregion
        }
        
        #region Properties
        public UIItemText2 UIItemText
        {
            get
            {
                if ((this.mUIItemText == null))
                {
                    this.mUIItemText = new UIItemText2(this);
                }
                return this.mUIItemText;
            }
        }
        
        public WpfEdit UITbEmployeeFirstNameEdit
        {
            get
            {
                if ((this.mUITbEmployeeFirstNameEdit == null))
                {
                    this.mUITbEmployeeFirstNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbEmployeeFirstNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbEmployeeFirstName";
                    this.mUITbEmployeeFirstNameEdit.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUITbEmployeeFirstNameEdit;
            }
        }
        
        public WpfEdit UITbEmployeeLastNameEdit
        {
            get
            {
                if ((this.mUITbEmployeeLastNameEdit == null))
                {
                    this.mUITbEmployeeLastNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbEmployeeLastNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbEmployeeLastName";
                    this.mUITbEmployeeLastNameEdit.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUITbEmployeeLastNameEdit;
            }
        }
        
        public WpfButton UIUPDATEButton
        {
            get
            {
                if ((this.mUIUPDATEButton == null))
                {
                    this.mUIUPDATEButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIUPDATEButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btEmployeeUpdate";
                    this.mUIUPDATEButton.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUIUPDATEButton;
            }
        }
        #endregion
        
        #region Fields
        private UIItemText2 mUIItemText;
        
        private WpfEdit mUITbEmployeeFirstNameEdit;
        
        private WpfEdit mUITbEmployeeLastNameEdit;
        
        private WpfButton mUIUPDATEButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemText2 : WpfText
    {
        
        public UIItemText2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = " ";
            this.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
            #endregion
        }
        
        #region Properties
        public WpfText UIEmployeesText
        {
            get
            {
                if ((this.mUIEmployeesText == null))
                {
                    this.mUIEmployeesText = new WpfText(this);
                    #region Search Criteria
                    this.mUIEmployeesText.SearchProperties[WpfText.PropertyNames.Name] = "Employees";
                    this.mUIEmployeesText.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUIEmployeesText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIEmployeesText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemToolBar : WpfToolBar
    {
        
        public UIItemToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
            #endregion
        }
        
        #region Properties
        public WpfButton UIBtNewTasksButton
        {
            get
            {
                if ((this.mUIBtNewTasksButton == null))
                {
                    this.mUIBtNewTasksButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIBtNewTasksButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btNewTasks";
                    this.mUIBtNewTasksButton.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUIBtNewTasksButton;
            }
        }
        
        public WpfButton UIBtNewContactButton
        {
            get
            {
                if ((this.mUIBtNewContactButton == null))
                {
                    this.mUIBtNewContactButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIBtNewContactButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btNewContact";
                    this.mUIBtNewContactButton.WindowTitles.Add(" CRM System User: Ivan   Pupkin");
                    #endregion
                }
                return this.mUIBtNewContactButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIBtNewTasksButton;
        
        private WpfButton mUIBtNewContactButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINewEmployeeWindow : WinWindow
    {
        
        public UINewEmployeeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "NewEmployee";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("NewEmployee");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("NewEmployee");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICRMSystemWindow1 : WinWindow
    {
        
        public UICRMSystemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "CRM System";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("CRM System");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("CRM System");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDeletionWindow : WinWindow
    {
        
        public UIDeletionWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Deletion";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Deletion");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Deletion");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Deletion");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Deletion");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Deletion");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUpdatingWindow : WinWindow
    {
        
        public UIUpdatingWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Updating";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Updating");
            #endregion
        }
        
        #region Properties
        public WinControl UIUpdatingDialog
        {
            get
            {
                if ((this.mUIUpdatingDialog == null))
                {
                    this.mUIUpdatingDialog = new WinControl(this);
                    #region Search Criteria
                    this.mUIUpdatingDialog.SearchProperties[UITestControl.PropertyNames.Name] = "Updating";
                    this.mUIUpdatingDialog.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
                    this.mUIUpdatingDialog.WindowTitles.Add("Updating");
                    #endregion
                }
                return this.mUIUpdatingDialog;
            }
        }
        
        public UIYesWindow1 UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow1(this);
                }
                return this.mUIYesWindow;
            }
        }
        
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIUpdatingDialog;
        
        private UIYesWindow1 mUIYesWindow;
        
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYesWindow1 : WinWindow
    {
        
        public UIYesWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Updating");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Updating");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Updating");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Updating");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINewTaskWindow : WinWindow
    {
        
        public UINewTaskWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "NewTask";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("NewTask");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("NewTask");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINewContactWindow : WpfWindow
    {
        
        public UINewContactWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "New Contact";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("New Contact");
            #endregion
        }
        
        #region Properties
        public WpfComboBox UICbClientContactNameComboBox
        {
            get
            {
                if ((this.mUICbClientContactNameComboBox == null))
                {
                    this.mUICbClientContactNameComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICbClientContactNameComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cbClientContactName";
                    this.mUICbClientContactNameComboBox.WindowTitles.Add("New Contact");
                    #endregion
                }
                return this.mUICbClientContactNameComboBox;
            }
        }
        
        public WpfComboBox UICbEmployeeContactNamComboBox
        {
            get
            {
                if ((this.mUICbEmployeeContactNamComboBox == null))
                {
                    this.mUICbEmployeeContactNamComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICbEmployeeContactNamComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cbEmployeeContactName";
                    this.mUICbEmployeeContactNamComboBox.WindowTitles.Add("New Contact");
                    #endregion
                }
                return this.mUICbEmployeeContactNamComboBox;
            }
        }
        
        public WpfComboBox UICbContactTypeComboBox
        {
            get
            {
                if ((this.mUICbContactTypeComboBox == null))
                {
                    this.mUICbContactTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICbContactTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cbContactType";
                    this.mUICbContactTypeComboBox.WindowTitles.Add("New Contact");
                    #endregion
                }
                return this.mUICbContactTypeComboBox;
            }
        }
        
        public WpfDatePicker UIDpContactDateDatePicker
        {
            get
            {
                if ((this.mUIDpContactDateDatePicker == null))
                {
                    this.mUIDpContactDateDatePicker = new WpfDatePicker(this);
                    #region Search Criteria
                    this.mUIDpContactDateDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dpContactDate";
                    this.mUIDpContactDateDatePicker.WindowTitles.Add("New Contact");
                    #endregion
                }
                return this.mUIDpContactDateDatePicker;
            }
        }
        
        public WpfEdit UITbContactSubjectEdit
        {
            get
            {
                if ((this.mUITbContactSubjectEdit == null))
                {
                    this.mUITbContactSubjectEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbContactSubjectEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbContactSubject";
                    this.mUITbContactSubjectEdit.WindowTitles.Add("New Contact");
                    #endregion
                }
                return this.mUITbContactSubjectEdit;
            }
        }
        
        public WpfEdit UITbContactOutcomeEdit
        {
            get
            {
                if ((this.mUITbContactOutcomeEdit == null))
                {
                    this.mUITbContactOutcomeEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbContactOutcomeEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbContactOutcome";
                    this.mUITbContactOutcomeEdit.WindowTitles.Add("New Contact");
                    #endregion
                }
                return this.mUITbContactOutcomeEdit;
            }
        }
        
        public WpfEdit UITbContactActionsToDoEdit
        {
            get
            {
                if ((this.mUITbContactActionsToDoEdit == null))
                {
                    this.mUITbContactActionsToDoEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbContactActionsToDoEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbContactActionsToDo";
                    this.mUITbContactActionsToDoEdit.WindowTitles.Add("New Contact");
                    #endregion
                }
                return this.mUITbContactActionsToDoEdit;
            }
        }
        
        public WpfButton UIADDButton
        {
            get
            {
                if ((this.mUIADDButton == null))
                {
                    this.mUIADDButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIADDButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btAdd";
                    this.mUIADDButton.WindowTitles.Add("New Contact");
                    #endregion
                }
                return this.mUIADDButton;
            }
        }
        
        public WpfButton UICLOSEButton
        {
            get
            {
                if ((this.mUICLOSEButton == null))
                {
                    this.mUICLOSEButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICLOSEButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btClose";
                    this.mUICLOSEButton.WindowTitles.Add("New Contact");
                    #endregion
                }
                return this.mUICLOSEButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mUICbClientContactNameComboBox;
        
        private WpfComboBox mUICbEmployeeContactNamComboBox;
        
        private WpfComboBox mUICbContactTypeComboBox;
        
        private WpfDatePicker mUIDpContactDateDatePicker;
        
        private WpfEdit mUITbContactSubjectEdit;
        
        private WpfEdit mUITbContactOutcomeEdit;
        
        private WpfEdit mUITbContactActionsToDoEdit;
        
        private WpfButton mUIADDButton;
        
        private WpfButton mUICLOSEButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAdditionWindow : WinWindow
    {
        
        public UIAdditionWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Addition";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Addition");
            #endregion
        }
        
        #region Properties
        public WinControl UIAdditionDialog
        {
            get
            {
                if ((this.mUIAdditionDialog == null))
                {
                    this.mUIAdditionDialog = new WinControl(this);
                    #region Search Criteria
                    this.mUIAdditionDialog.SearchProperties[UITestControl.PropertyNames.Name] = "Addition";
                    this.mUIAdditionDialog.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
                    this.mUIAdditionDialog.WindowTitles.Add("Addition");
                    #endregion
                }
                return this.mUIAdditionDialog;
            }
        }
        
        public UIYesWindow2 UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow2(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAdditionDialog;
        
        private UIYesWindow2 mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYesWindow2 : WinWindow
    {
        
        public UIYesWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Addition");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Addition");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
}
